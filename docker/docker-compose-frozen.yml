networks:
  default:
    driver: bridge
    name: synos_network
services:
  consciousness-unified:
    build:
      context: /home/diablorain/Syn_OS/services/consciousness-unified
      dockerfile: Dockerfile
    container_name: synos_consciousness_unified
    depends_on:
      nats:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: 2.0
          memory: 3G
    environment:
      ANTHROPIC_API_KEY: ''
      DEEPSEEK_API_KEY: ''
      GEMINI_API_KEY: ''
      LM_STUDIO_BASE_URL: http://host.docker.internal:1234
      NATS_URL: nats://nats:4222
      OLLAMA_BASE_URL: http://host.docker.internal:11434
      OPENAI_API_KEY: ''
      POSTGRES_URL: postgresql://synos:synos_secure_password@postgres:5432/synos
      REDIS_URL: redis://:synos_redis_password@redis:6379
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8080/health
      timeout: 15s
    ports:
    - published: 8080
      target: 8080
    restart: unless-stopped
    volumes:
    - consciousness_data:/app/data:rw
    - consciousness_logs:/app/logs:rw
  context-intelligence-unified:
    build:
      context: /home/diablorain/Syn_OS/services/context-intelligence-unified
      dockerfile: Dockerfile
    container_name: synos_context_intelligence_unified
    depends_on:
      consciousness-unified:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: 3.0
          memory: 4G
    environment:
      CONSCIOUSNESS_SERVICE_URL: http://consciousness-unified:8080
      POSTGRES_URL: postgresql://synos:synos_secure_password@postgres:5432/synos
      QDRANT_URL: http://qdrant:6333
      REDIS_URL: redis://:synos_redis_password@redis:6379
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8082/health
      timeout: 15s
    ports:
    - published: 8082
      target: 8082
    restart: unless-stopped
    volumes:
    - context_intelligence_data:/app/data:rw
    - context_intelligence_logs:/app/logs:rw
  ctf-unified:
    build:
      context: /home/diablorain/Syn_OS/services/ctf-unified
      dockerfile: Dockerfile
    container_name: synos_ctf_unified
    depends_on:
      consciousness-unified:
        condition: service_healthy
      educational-unified:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: 1.5
          memory: 2G
    environment:
      CONSCIOUSNESS_SERVICE_URL: http://consciousness-unified:8080
      EDUCATIONAL_SERVICE_URL: http://educational-unified:8081
      POSTGRES_URL: postgresql://synos:synos_secure_password@postgres:5432/synos
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8083/health
      timeout: 15s
    ports:
    - published: 8083
      target: 8083
    restart: unless-stopped
    volumes:
    - ctf_data:/app/data:rw
    - ctf_logs:/app/logs:rw
  educational-unified:
    build:
      context: /home/diablorain/Syn_OS/services/educational-unified
      dockerfile: Dockerfile
    container_name: synos_educational_unified
    depends_on:
      consciousness-unified:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: 2.5
          memory: 3G
    environment:
      BOOTDEV_API_KEY: ''
      CONSCIOUSNESS_SERVICE_URL: http://consciousness-unified:8080
      FREECODECAMP_API_KEY: ''
      HACKTHEBOX_API_KEY: ''
      POSTGRES_URL: postgresql://synos:synos_secure_password@postgres:5432/synos
      REDIS_URL: redis://:synos_redis_password@redis:6379
      TRYHACKME_API_KEY: ''
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8081/health
      timeout: 15s
    ports:
    - published: 8081
      target: 8081
    restart: unless-stopped
    volumes:
    - educational_data:/app/data:rw
    - educational_logs:/app/logs:rw
  grafana:
    container_name: synos_grafana
    depends_on:
      prometheus:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: 0.3
          memory: 512M
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
      GF_SECURITY_ADMIN_PASSWORD: synos_admin
    image: grafana/grafana:10.0.3
    ports:
    - published: 3000
      target: 3000
    restart: unless-stopped
    volumes:
    - grafana_data:/var/lib/grafana:rw
    - /home/diablorain/Syn_OS/config/grafana/provisioning:/etc/grafana/provisioning:rw
  nats:
    command:
    - --jetstream
    - --store_dir=/data
    - --max_memory_store=1GB
    - --max_file_store=10GB
    container_name: synos_nats
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD-SHELL
      - wget -q --spider http://localhost:8222/varz
      timeout: 10s
    image: nats:2.10-alpine
    ports:
    - published: 4222
      target: 4222
    - published: 8222
      target: 8222
    restart: unless-stopped
    volumes:
    - nats_data:/data:rw
  nginx:
    container_name: synos_nginx
    depends_on:
      consciousness-unified:
        condition: service_started
      context-intelligence-unified:
        condition: service_started
      ctf-unified:
        condition: service_started
      educational-unified:
        condition: service_started
      grafana:
        condition: service_started
      orchestrator:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: 0.2
          memory: 256M
    image: nginx:1.25-alpine
    ports:
    - published: 80
      target: 80
    - published: 443
      target: 443
    restart: unless-stopped
    volumes:
    - /home/diablorain/Syn_OS/config/nginx/nginx.conf:/etc/nginx/nginx.conf:rw
    - /home/diablorain/Syn_OS/config/nginx/sites-enabled:/etc/nginx/sites-enabled:rw
    - nginx_logs:/var/log/nginx:rw
  orchestrator:
    build:
      context: /home/diablorain/Syn_OS/services/orchestrator
      dockerfile: Dockerfile
    container_name: synos_orchestrator
    depends_on:
      consciousness-unified:
        condition: service_healthy
      context-intelligence-unified:
        condition: service_healthy
      ctf-unified:
        condition: service_healthy
      educational-unified:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 1G
    environment:
      CONSCIOUSNESS_SERVICE_URL: http://consciousness-unified:8080
      CONTEXT_INTELLIGENCE_URL: http://context-intelligence-unified:8082
      CTF_SERVICE_URL: http://ctf-unified:8083
      EDUCATIONAL_SERVICE_URL: http://educational-unified:8081
      NATS_URL: nats://nats:4222
      POSTGRES_URL: postgresql://synos:synos_secure_password@postgres:5432/synos
      REDIS_URL: redis://:synos_redis_password@redis:6379
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8090/health
      timeout: 10s
    ports:
    - published: 8090
      target: 8090
    restart: unless-stopped
    volumes:
    - orchestrator_logs:/app/logs:rw
  postgres:
    container_name: synos_postgres
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    environment:
      POSTGRES_DB: synos
      POSTGRES_PASSWORD: synos_secure_password
      POSTGRES_USER: synos
    healthcheck:
      interval: 30s
      retries: 5
      test:
      - CMD-SHELL
      - pg_isready -U synos
      timeout: 10s
    image: postgres:15
    ports:
    - published: 5432
      target: 5432
    restart: unless-stopped
    volumes:
    - postgres_data:/var/lib/postgresql/data:rw
    - /home/diablorain/Syn_OS/docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:rw
  prometheus:
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --storage.tsdb.retention.time=200h
    - --web.enable-lifecycle
    container_name: synos_prometheus
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    image: prom/prometheus:v2.45.0
    ports:
    - published: 9090
      target: 9090
    restart: unless-stopped
    volumes:
    - /home/diablorain/Syn_OS/config/prometheus.yml:/etc/prometheus/prometheus.yml:rw
    - prometheus_data:/prometheus:rw
  qdrant:
    container_name: synos_qdrant
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 2G
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__SERVICE__HTTP_PORT: 6333
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - curl
      - -f
      - http://localhost:6333/health
      timeout: 10s
    image: qdrant/qdrant:v1.7.0
    ports:
    - published: 6333
      target: 6333
    - published: 6334
      target: 6334
    restart: unless-stopped
    volumes:
    - qdrant_data:/qdrant/storage:rw
  redis:
    command: redis-server --requirepass synos_redis_password
    container_name: synos_redis
    deploy:
      resources:
        limits:
          cpus: 0.3
          memory: 512M
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - redis-cli
      - ping
      timeout: 10s
    image: redis:7-alpine
    ports:
    - published: 6379
      target: 6379
    restart: unless-stopped
    volumes:
    - redis_data:/data:rw
version: '3.8'
volumes:
  consciousness_data:
    driver: local
  consciousness_logs:
    driver: local
  context_intelligence_data:
    driver: local
  context_intelligence_logs:
    driver: local
  ctf_data:
    driver: local
  ctf_logs:
    driver: local
  educational_data:
    driver: local
  educational_logs:
    driver: local
  grafana_data:
    driver: local
  nats_data:
    driver: local
  nginx_logs:
    driver: local
  orchestrator_logs:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  qdrant_data:
    driver: local
  redis_data:
    driver: local

