version: "3.8"

services:
  # Add Prometheus for metrics collection
  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: synapticos_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - synapticos_network
    restart: unless-stopped

  # Add Grafana for visualization
  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: synapticos_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=synapticos_admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - synapticos_network
    restart: unless-stopped

  # Add cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: synapticos_cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    networks:
      - synapticos_network
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:

networks:
  synapticos_network:
    external: true
