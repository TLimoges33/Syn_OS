apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "syn-os.fullname" . }}-orchestrator
  labels:
    {{- include "syn-os.labels" . | nindent 4 }}
    app: syn-os-orchestrator
    color: {{ .Values.deployment.color }}
spec:
  replicas: {{ .Values.orchestrator.replicaCount }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "syn-os.selectorLabels" . | nindent 6 }}
      app: syn-os-orchestrator
      color: {{ .Values.deployment.color }}
  template:
    metadata:
      labels:
        {{- include "syn-os.selectorLabels" . | nindent 8 }}
        app: syn-os-orchestrator
        color: {{ .Values.deployment.color }}
    spec:
      serviceAccountName: {{ include "syn-os.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
      - name: orchestrator
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}-{{ .Values.orchestrator.image.repository }}:{{ .Values.orchestrator.image.tag | default .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: ENV
          value: {{ .Values.global.environment }}
        - name: NATS_URL
          value: "nats://{{ include "syn-os.fullname" . }}-nats:4222"
        - name: POSTGRES_HOST
          value: {{ .Values.database.host }}
        - name: POSTGRES_PORT
          value: "{{ .Values.database.port }}"
        - name: POSTGRES_DB
          value: {{ .Values.database.name }}
        - name: POSTGRES_USER
          value: {{ .Values.database.user }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "syn-os.fullname" . }}-secrets
              key: db-password
        - name: REDIS_HOST
          value: {{ .Values.redis.host }}
        - name: REDIS_PORT
          value: "{{ .Values.redis.port }}"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "syn-os.fullname" . }}-secrets
              key: redis-password
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "syn-os.fullname" . }}-secrets
              key: jwt-secret-key
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "syn-os.fullname" . }}-secrets
              key: encryption-key
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- toYaml .Values.orchestrator.resources | nindent 12 }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}