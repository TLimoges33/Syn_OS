global:
  environment: production
  imageRegistry: ghcr.io
  imagePullSecrets: []

image:
  registry: ghcr.io
  repository: syn-os/syn-os
  tag: latest
  pullPolicy: Always

deployment:
  color: blue
  replicaCount: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

orchestrator:
  enabled: true
  replicaCount: 3
  image:
    repository: syn-os-orchestrator
    tag: latest
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

consciousness:
  enabled: true
  replicaCount: 2
  image:
    repository: syn-os-consciousness
    tag: latest
  service:
    type: ClusterIP
    port: 8081
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 80

securityDashboard:
  enabled: true
  replicaCount: 2
  image:
    repository: syn-os-security-dashboard
    tag: latest
  service:
    type: ClusterIP
    port: 8083
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "300m"

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: syn-os.example.com
      paths:
        - path: /
          pathType: Prefix
          service: orchestrator
        - path: /consciousness
          pathType: Prefix
          service: consciousness
        - path: /security
          pathType: Prefix
          service: security-dashboard
  tls:
    - secretName: syn-os-tls
      hosts:
        - syn-os.example.com

database:
  host: postgres-service
  port: 5432
  name: syn_os
  user: syn_os_user

redis:
  enabled: true
  host: redis-service
  port: 6379
  auth:
    enabled: true

nats:
  enabled: true
  cluster:
    enabled: true
    replicas: 3
  jetstream:
    enabled: true
    memStorage:
      enabled: true
      size: 1Gi
    fileStorage:
      enabled: true
      size: 10Gi

postgresql:
  enabled: true
  auth:
    database: syn_os
    username: syn_os_user
  primary:
    persistence:
      enabled: true
      size: 20Gi
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: 1000m

secrets:
  jwtSecretKey: ""
  encryptionKey: ""
  consciousnessEncryptionKey: ""
  dbPassword: ""
  redisPassword: ""

monitoring:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true
  alerts:
    enabled: true

security:
  podSecurityPolicy:
    enabled: true
  networkPolicy:
    enabled: true
  rbac:
    enabled: true

nodeSelector: {}
tolerations: []
affinity: {}

serviceAccount:
  create: true
  annotations: {}
  name: syn-os