version: "3.8"

# SynOS Development Environment
# Simplified services for local development

services:
  # Core Infrastructure
  nats:
    image: nats:2.10-alpine
    container_name: synos_dev_nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["--jetstream", "--store_dir=/data", "--http_port=8222"]
    volumes:
      - nats_dev_data:/data
    networks:
      - synos_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: synos_dev_postgres
    environment:
      POSTGRES_DB: synos_dev
      POSTGRES_USER: synos_dev
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - synos_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U synos_dev -d synos_dev"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: synos_dev_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - synos_dev
    restart: unless-stopped

  # Core Services (Minimal for Development)
  orchestrator:
    build:
      context: ../../../services/orchestrator
      dockerfile: Dockerfile
    container_name: synos_dev_orchestrator
    environment:
      - ENV=development
      - NATS_URL=nats://nats:4222
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=synos_dev
      - POSTGRES_USER=synos_dev
      - POSTGRES_PASSWORD=dev_password
      - REDIS_HOST=redis
      - HTTP_PORT=8080
      - LOG_LEVEL=debug
    ports:
      - "8080:8080"
    depends_on:
      - nats
      - postgres
      - redis
    networks:
      - synos_dev
    restart: unless-stopped

  consciousness:
    build:
      context: ../../..
      dockerfile: deploy/environments/development/Dockerfile.consciousness
    container_name: synos_dev_consciousness
    environment:
      - ENV=development
      - NATS_URL=nats://nats:4222
      - ORCHESTRATOR_URL=http://orchestrator:8080
      - LOG_LEVEL=debug
    volumes:
      - ../../../src/consciousness:/app/src/consciousness
      - consciousness_dev_data:/app/data
    depends_on:
      - nats
      - orchestrator
    networks:
      - synos_dev
    restart: unless-stopped

  # Performance Monitoring
  monitoring:
    build:
      context: ../../../monitoring
      dockerfile: Dockerfile
    container_name: synos_dev_monitoring
    ports:
      - "9090:9090"
    environment:
      - ENV=development
      - LOG_LEVEL=debug
    networks:
      - synos_dev
    restart: unless-stopped

volumes:
  nats_dev_data:
  postgres_dev_data:
  redis_dev_data:
  consciousness_dev_data:

networks:
  synos_dev:
    driver: bridge
