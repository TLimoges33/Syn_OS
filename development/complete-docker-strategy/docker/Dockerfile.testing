# SynOS Testing Framework Container
# Comprehensive testing for all components

FROM ubuntu:22.04

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install testing dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    qemu-system-x86 \
    qemu-utils \
    virt-manager \
    libvirt-clients \
    git \
    vim \
    curl \
    wget \
    htop \
    netcat \
    nmap \
    iperf3 \
    stress-ng \
    && rm -rf /var/lib/apt/lists/*

# Install Python testing libraries
RUN pip3 install --no-cache-dir \
    pytest \
    pytest-cov \
    pytest-asyncio \
    pytest-html \
    requests \
    aiohttp \
    psutil \
    rich \
    typer \
    pydantic \
    selenium \
    paramiko \
    fabric \
    locust

# Set up workspace
WORKDIR /workspace

# Create testing directories
RUN mkdir -p /workspace/{tests,results,scripts,vm-images,reports}

# Set environment variables
ENV TEST_ROOT=/workspace/tests
ENV RESULTS_DIR=/workspace/results
ENV VM_DIR=/workspace/vm-images

# Create testing user
RUN useradd -m -s /bin/bash tester && \
    usermod -aG sudo tester && \
    echo "tester ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create comprehensive test suite
RUN echo '#!/usr/bin/env python3' > /workspace/comprehensive_test_suite.py && \
    echo 'import pytest' >> /workspace/comprehensive_test_suite.py && \
    echo 'import asyncio' >> /workspace/comprehensive_test_suite.py && \
    echo 'import requests' >> /workspace/comprehensive_test_suite.py && \
    echo 'import subprocess' >> /workspace/comprehensive_test_suite.py && \
    echo 'import time' >> /workspace/comprehensive_test_suite.py && \
    echo 'from rich.console import Console' >> /workspace/comprehensive_test_suite.py && \
    echo 'from rich.table import Table' >> /workspace/comprehensive_test_suite.py && \
    echo '' >> /workspace/comprehensive_test_suite.py && \
    echo 'console = Console()' >> /workspace/comprehensive_test_suite.py && \
    echo '' >> /workspace/comprehensive_test_suite.py && \
    echo 'class TestSynOSComponents:' >> /workspace/comprehensive_test_suite.py && \
    echo '    """Comprehensive SynOS component testing"""' >> /workspace/comprehensive_test_suite.py && \
    echo '' >> /workspace/comprehensive_test_suite.py && \
    echo '    def test_consciousness_engine_api(self):' >> /workspace/comprehensive_test_suite.py && \
    echo '        """Test consciousness engine API responsiveness"""' >> /workspace/comprehensive_test_suite.py && \
    echo '        try:' >> /workspace/comprehensive_test_suite.py && \
    echo '            response = requests.get("http://synos-consciousness-dev:9090/status", timeout=10)' >> /workspace/comprehensive_test_suite.py && \
    echo '            assert response.status_code == 200' >> /workspace/comprehensive_test_suite.py && \
    echo '            data = response.json()' >> /workspace/comprehensive_test_suite.py && \
    echo '            assert "consciousness_level" in data' >> /workspace/comprehensive_test_suite.py && \
    echo '            assert data["active"] == True' >> /workspace/comprehensive_test_suite.py && \
    echo '            console.print("✅ Consciousness engine API test passed")' >> /workspace/comprehensive_test_suite.py && \
    echo '        except Exception as e:' >> /workspace/comprehensive_test_suite.py && \
    echo '            console.print(f"❌ Consciousness engine API test failed: {e}")' >> /workspace/comprehensive_test_suite.py && \
    echo '            raise' >> /workspace/comprehensive_test_suite.py && \
    echo '' >> /workspace/comprehensive_test_suite.py && \
    echo '    def test_security_framework_api(self):' >> /workspace/comprehensive_test_suite.py && \
    echo '        """Test security framework API"""' >> /workspace/comprehensive_test_suite.py && \
    echo '        try:' >> /workspace/comprehensive_test_suite.py && \
    echo '            response = requests.get("http://synos-security-dev:9091/threats", timeout=10)' >> /workspace/comprehensive_test_suite.py && \
    echo '            assert response.status_code == 200' >> /workspace/comprehensive_test_suite.py && \
    echo '            data = response.json()' >> /workspace/comprehensive_test_suite.py && \
    echo '            assert "threat_level" in data' >> /workspace/comprehensive_test_suite.py && \
    echo '            console.print("✅ Security framework API test passed")' >> /workspace/comprehensive_test_suite.py && \
    echo '        except Exception as e:' >> /workspace/comprehensive_test_suite.py && \
    echo '            console.print(f"❌ Security framework API test failed: {e}")' >> /workspace/comprehensive_test_suite.py && \
    echo '            raise' >> /workspace/comprehensive_test_suite.py && \
    echo '' >> /workspace/comprehensive_test_suite.py && \
    echo '    def test_ui_dashboard_availability(self):' >> /workspace/comprehensive_test_suite.py && \
    echo '        """Test UI dashboard availability"""' >> /workspace/comprehensive_test_suite.py && \
    echo '        try:' >> /workspace/comprehensive_test_suite.py && \
    echo '            response = requests.get("http://synos-ui-dev:8080/", timeout=10)' >> /workspace/comprehensive_test_suite.py && \
    echo '            assert response.status_code == 200' >> /workspace/comprehensive_test_suite.py && \
    echo '            assert "SynOS" in response.text' >> /workspace/comprehensive_test_suite.py && \
    echo '            console.print("✅ UI dashboard test passed")' >> /workspace/comprehensive_test_suite.py && \
    echo '        except Exception as e:' >> /workspace/comprehensive_test_suite.py && \
    echo '            console.print(f"❌ UI dashboard test failed: {e}")' >> /workspace/comprehensive_test_suite.py && \
    echo '            raise' >> /workspace/comprehensive_test_suite.py && \
    echo '' >> /workspace/comprehensive_test_suite.py && \
    echo '    def test_component_integration(self):' >> /workspace/comprehensive_test_suite.py && \
    echo '        """Test integration between components"""' >> /workspace/comprehensive_test_suite.py && \
    echo '        # Test consciousness -> security integration' >> /workspace/comprehensive_test_suite.py && \
    echo '        consciousness_data = requests.get("http://synos-consciousness-dev:9090/status").json()' >> /workspace/comprehensive_test_suite.py && \
    echo '        security_data = requests.get("http://synos-security-dev:9091/threats").json()' >> /workspace/comprehensive_test_suite.py && \
    echo '        ' >> /workspace/comprehensive_test_suite.py && \
    echo '        # Verify consciousness correlation exists' >> /workspace/comprehensive_test_suite.py && \
    echo '        assert "consciousness_correlation" in security_data' >> /workspace/comprehensive_test_suite.py && \
    echo '        console.print("✅ Component integration test passed")' >> /workspace/comprehensive_test_suite.py && \
    echo '' >> /workspace/comprehensive_test_suite.py && \
    echo '    def test_performance_metrics(self):' >> /workspace/comprehensive_test_suite.py && \
    echo '        """Test system performance metrics"""' >> /workspace/comprehensive_test_suite.py && \
    echo '        import psutil' >> /workspace/comprehensive_test_suite.py && \
    echo '        ' >> /workspace/comprehensive_test_suite.py && \
    echo '        # Check memory usage' >> /workspace/comprehensive_test_suite.py && \
    echo '        memory = psutil.virtual_memory()' >> /workspace/comprehensive_test_suite.py && \
    echo '        assert memory.percent < 90  # Should not exceed 90% memory usage' >> /workspace/comprehensive_test_suite.py && \
    echo '        ' >> /workspace/comprehensive_test_suite.py && \
    echo '        # Check CPU usage' >> /workspace/comprehensive_test_suite.py && \
    echo '        cpu_percent = psutil.cpu_percent(interval=1)' >> /workspace/comprehensive_test_suite.py && \
    echo '        assert cpu_percent < 95  # Should not exceed 95% CPU usage' >> /workspace/comprehensive_test_suite.py && \
    echo '        ' >> /workspace/comprehensive_test_suite.py && \
    echo '        console.print("✅ Performance metrics test passed")' >> /workspace/comprehensive_test_suite.py && \
    echo '' >> /workspace/comprehensive_test_suite.py && \
    echo 'if __name__ == "__main__":' >> /workspace/comprehensive_test_suite.py && \
    echo '    pytest.main([__file__, "-v", "--html=/workspace/results/test_report.html"])' >> /workspace/comprehensive_test_suite.py && \
    chmod +x /workspace/comprehensive_test_suite.py

# Create VM testing script
RUN echo '#!/bin/bash' > /workspace/vm_test_runner.sh && \
    echo 'echo "🖥️ Starting SynOS VM Testing..."' >> /workspace/vm_test_runner.sh && \
    echo '' >> /workspace/vm_test_runner.sh && \
    echo '# Create test VM if ISO exists' >> /workspace/vm_test_runner.sh && \
    echo 'if [[ -f "/workspace/synos-test.iso" ]]; then' >> /workspace/vm_test_runner.sh && \
    echo '    echo "Found SynOS test ISO, starting VM test..."' >> /workspace/vm_test_runner.sh && \
    echo '    ' >> /workspace/vm_test_runner.sh && \
    echo '    # Create VM with QEMU' >> /workspace/vm_test_runner.sh && \
    echo '    qemu-system-x86_64 \' >> /workspace/vm_test_runner.sh && \
    echo '        -m 2048 \' >> /workspace/vm_test_runner.sh && \
    echo '        -cdrom /workspace/synos-test.iso \' >> /workspace/vm_test_runner.sh && \
    echo '        -nographic \' >> /workspace/vm_test_runner.sh && \
    echo '        -boot d \' >> /workspace/vm_test_runner.sh && \
    echo '        -vnc :1 \' >> /workspace/vm_test_runner.sh && \
    echo '        -monitor unix:/tmp/qemu-monitor,server,nowait &' >> /workspace/vm_test_runner.sh && \
    echo '    ' >> /workspace/vm_test_runner.sh && \
    echo '    VM_PID=$!' >> /workspace/vm_test_runner.sh && \
    echo '    echo "VM started with PID: $VM_PID"' >> /workspace/vm_test_runner.sh && \
    echo '    ' >> /workspace/vm_test_runner.sh && \
    echo '    # Wait for boot (adjust time as needed)' >> /workspace/vm_test_runner.sh && \
    echo '    sleep 60' >> /workspace/vm_test_runner.sh && \
    echo '    ' >> /workspace/vm_test_runner.sh && \
    echo '    # Test VM responsiveness' >> /workspace/vm_test_runner.sh && \
    echo '    echo "Testing VM responsiveness..."' >> /workspace/vm_test_runner.sh && \
    echo '    # Add VM testing logic here' >> /workspace/vm_test_runner.sh && \
    echo '    ' >> /workspace/vm_test_runner.sh && \
    echo '    # Shutdown VM' >> /workspace/vm_test_runner.sh && \
    echo '    kill $VM_PID' >> /workspace/vm_test_runner.sh && \
    echo '    echo "✅ VM test completed"' >> /workspace/vm_test_runner.sh && \
    echo 'else' >> /workspace/vm_test_runner.sh && \
    echo '    echo "⚠️ No test ISO found, skipping VM test"' >> /workspace/vm_test_runner.sh && \
    echo 'fi' >> /workspace/vm_test_runner.sh && \
    chmod +x /workspace/vm_test_runner.sh

# Create load testing script
RUN echo '#!/usr/bin/env python3' > /workspace/load_test.py && \
    echo 'import asyncio' >> /workspace/load_test.py && \
    echo 'import aiohttp' >> /workspace/load_test.py && \
    echo 'import time' >> /workspace/load_test.py && \
    echo 'from rich.console import Console' >> /workspace/load_test.py && \
    echo 'from rich.progress import Progress' >> /workspace/load_test.py && \
    echo '' >> /workspace/load_test.py && \
    echo 'console = Console()' >> /workspace/load_test.py && \
    echo '' >> /workspace/load_test.py && \
    echo 'async def test_endpoint(session, url, semaphore):' >> /workspace/load_test.py && \
    echo '    async with semaphore:' >> /workspace/load_test.py && \
    echo '        try:' >> /workspace/load_test.py && \
    echo '            async with session.get(url) as response:' >> /workspace/load_test.py && \
    echo '                return response.status == 200' >> /workspace/load_test.py && \
    echo '        except:' >> /workspace/load_test.py && \
    echo '            return False' >> /workspace/load_test.py && \
    echo '' >> /workspace/load_test.py && \
    echo 'async def load_test():' >> /workspace/load_test.py && \
    echo '    """Perform load testing on SynOS components"""' >> /workspace/load_test.py && \
    echo '    endpoints = [' >> /workspace/load_test.py && \
    echo '        "http://synos-consciousness-dev:9090/status",' >> /workspace/load_test.py && \
    echo '        "http://synos-security-dev:9091/threats",' >> /workspace/load_test.py && \
    echo '        "http://synos-ui-dev:8080/"' >> /workspace/load_test.py && \
    echo '    ]' >> /workspace/load_test.py && \
    echo '    ' >> /workspace/load_test.py && \
    echo '    semaphore = asyncio.Semaphore(10)  # Limit concurrent requests' >> /workspace/load_test.py && \
    echo '    ' >> /workspace/load_test.py && \
    echo '    async with aiohttp.ClientSession() as session:' >> /workspace/load_test.py && \
    echo '        with Progress() as progress:' >> /workspace/load_test.py && \
    echo '            task = progress.add_task("Load testing...", total=100)' >> /workspace/load_test.py && \
    echo '            ' >> /workspace/load_test.py && \
    echo '            for i in range(100):' >> /workspace/load_test.py && \
    echo '                tasks = []' >> /workspace/load_test.py && \
    echo '                for endpoint in endpoints:' >> /workspace/load_test.py && \
    echo '                    tasks.append(test_endpoint(session, endpoint, semaphore))' >> /workspace/load_test.py && \
    echo '                ' >> /workspace/load_test.py && \
    echo '                results = await asyncio.gather(*tasks)' >> /workspace/load_test.py && \
    echo '                success_rate = sum(results) / len(results)' >> /workspace/load_test.py && \
    echo '                ' >> /workspace/load_test.py && \
    echo '                if success_rate < 0.9:' >> /workspace/load_test.py && \
    echo '                    console.print(f"⚠️ Low success rate: {success_rate:.2%}")' >> /workspace/load_test.py && \
    echo '                ' >> /workspace/load_test.py && \
    echo '                progress.update(task, advance=1)' >> /workspace/load_test.py && \
    echo '                await asyncio.sleep(0.1)' >> /workspace/load_test.py && \
    echo '    ' >> /workspace/load_test.py && \
    echo '    console.print("✅ Load test completed")' >> /workspace/load_test.py && \
    echo '' >> /workspace/load_test.py && \
    echo 'if __name__ == "__main__":' >> /workspace/load_test.py && \
    echo '    asyncio.run(load_test())' >> /workspace/load_test.py && \
    chmod +x /workspace/load_test.py

# Create main test runner
RUN echo '#!/bin/bash' > /workspace/run_all_tests.sh && \
    echo 'echo "🧪 Starting SynOS Comprehensive Test Suite"' >> /workspace/run_all_tests.sh && \
    echo 'echo "=========================================="' >> /workspace/run_all_tests.sh && \
    echo '' >> /workspace/run_all_tests.sh && \
    echo '# Create results directory with timestamp' >> /workspace/run_all_tests.sh && \
    echo 'TIMESTAMP=$(date +%Y%m%d_%H%M%S)' >> /workspace/run_all_tests.sh && \
    echo 'RESULTS_DIR="/workspace/results/$TIMESTAMP"' >> /workspace/run_all_tests.sh && \
    echo 'mkdir -p "$RESULTS_DIR"' >> /workspace/run_all_tests.sh && \
    echo '' >> /workspace/run_all_tests.sh && \
    echo '# Run component tests' >> /workspace/run_all_tests.sh && \
    echo 'echo "🔬 Running component tests..."' >> /workspace/run_all_tests.sh && \
    echo 'cd /workspace' >> /workspace/run_all_tests.sh && \
    echo 'python3 comprehensive_test_suite.py' >> /workspace/run_all_tests.sh && \
    echo '' >> /workspace/run_all_tests.sh && \
    echo '# Run load tests' >> /workspace/run_all_tests.sh && \
    echo 'echo "⚡ Running load tests..."' >> /workspace/run_all_tests.sh && \
    echo 'python3 load_test.py' >> /workspace/run_all_tests.sh && \
    echo '' >> /workspace/run_all_tests.sh && \
    echo '# Run VM tests if available' >> /workspace/run_all_tests.sh && \
    echo 'echo "🖥️ Running VM tests..."' >> /workspace/run_all_tests.sh && \
    echo './vm_test_runner.sh' >> /workspace/run_all_tests.sh && \
    echo '' >> /workspace/run_all_tests.sh && \
    echo 'echo "✅ All tests completed!"' >> /workspace/run_all_tests.sh && \
    echo 'echo "📊 Results saved to: $RESULTS_DIR"' >> /workspace/run_all_tests.sh && \
    chmod +x /workspace/run_all_tests.sh

# Switch to testing user
USER tester

# Default command
CMD ["/workspace/run_all_tests.sh"]
