#!/bin/bash
# SynOS Fuzzing Runner Script
# Runs fuzzing tests overnight and logs results

set -e

FUZZ_DIR="/home/diablorain/Syn_OS/fuzz"
RESULTS_DIR="/home/diablorain/fuzzing-results"
TIMESTAMP=$(date +%Y%m%d-%H%M%S)

# Create results directory
mkdir -p "$RESULTS_DIR"

echo "🔍 Starting SynOS Fuzzing Suite - $TIMESTAMP"
echo "Results will be saved to: $RESULTS_DIR"
echo ""

# Function to run a fuzz target
run_fuzz_target() {
    local target_name=$1
    local duration=$2
    local output_file="$RESULTS_DIR/${target_name}-${TIMESTAMP}.txt"

    echo "🎯 Running $target_name for $duration seconds..."
    echo "Output: $output_file"

    cd "$FUZZ_DIR"

    # Run fuzzer with timeout
    timeout $duration cargo fuzz run "$target_name" -- \
        -max_total_time=$duration \
        -print_final_stats=1 \
        > "$output_file" 2>&1 || {
        local exit_code=$?
        if [ $exit_code -eq 124 ]; then
            echo "✅ $target_name completed successfully (timeout reached)"
        else
            echo "⚠️  $target_name exited with code $exit_code"
        fi
    }

    # Check for crashes
    if [ -d "$FUZZ_DIR/artifacts/$target_name" ]; then
        local crash_count=$(find "$FUZZ_DIR/artifacts/$target_name" -type f | wc -l)
        if [ $crash_count -gt 0 ]; then
            echo "🚨 Found $crash_count crashes in $target_name!"
            echo "Crashes saved to: $FUZZ_DIR/artifacts/$target_name/"
        fi
    fi

    echo ""
}

# Run fuzzing targets
echo "Starting fuzzing campaign..."
echo ""

# Target 1: Input Validation (4 hours)
run_fuzz_target "fuzz_input_validation" 14400

# Target 2: Parser (4 hours)
run_fuzz_target "fuzz_parser" 14400

# Generate summary report
SUMMARY_FILE="$RESULTS_DIR/summary-${TIMESTAMP}.md"

cat > "$SUMMARY_FILE" << EOF
# SynOS Fuzzing Results - $TIMESTAMP

## Overview
- **Start Time**: $(date)
- **Duration**: 8 hours
- **Targets**: 2 (fuzz_input_validation, fuzz_parser)

## Results

### Fuzz Target: input_validation
- **Duration**: 4 hours
- **Results**: See ${RESULTS_DIR}/fuzz_input_validation-${TIMESTAMP}.txt
- **Crashes**: $(find "$FUZZ_DIR/artifacts/fuzz_input_validation" -type f 2>/dev/null | wc -l)

### Fuzz Target: parser
- **Duration**: 4 hours
- **Results**: See ${RESULTS_DIR}/fuzz_parser-${TIMESTAMP}.txt
- **Crashes**: $(find "$FUZZ_DIR/artifacts/fuzz_parser" -type f 2>/dev/null | wc -l)

## Next Steps
1. Review crash artifacts
2. Reproduce crashes locally
3. Fix vulnerabilities
4. Document findings in CVE format
5. Re-run fuzzing to verify fixes

## Artifacts Location
\`\`\`
$FUZZ_DIR/artifacts/
\`\`\`

---
*Generated by run-fuzzing.sh*
EOF

echo "✅ Fuzzing campaign complete!"
echo "📊 Summary report: $SUMMARY_FILE"
echo ""
echo "To review results:"
echo "  cat $SUMMARY_FILE"
echo "  ls -la $FUZZ_DIR/artifacts/"
