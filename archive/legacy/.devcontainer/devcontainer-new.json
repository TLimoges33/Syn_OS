{
  "name": "Syn_OS Development Environment (2025 Edition)",
  "dockerFile": "./dev-environment/Dockerfile",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopContainer",
  "runArgs": [
    "--init",
    "--privileged",
    "--security-opt", "seccomp=unconfined",
    "--security-opt", "apparmor=unconfined",
    "--cap-add=SYS_PTRACE",
    "--cap-add=SYS_ADMIN",
    "--device=/dev/kvm",
    "--mount", "type=tmpfs,destination=/tmp,tmpfs-size=2G"
  ],
  
  "features": {
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "enableNonRootDocker": "true",
      "moby": "true",
      "azureDnsAutoDetection": "true",
      "installDockerBuildx": "true",
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/rust:1": {
      "version": "1.75",
      "profile": "default"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11",
      "installTools": true,
      "installJupyterlab": true
    },
    "ghcr.io/devcontainers/features/go:1": {
      "version": "1.21"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "20",
      "nodeGypDependencies": true
    }
  },

  "customizations": {
    "vscode": {
      "extensions": [
        // Language Support
        "rust-lang.rust-analyzer",
        "ms-vscode.cpptools-extension-pack",
        "golang.go",
        "ms-python.python",
        "ms-python.pylance",
        "ms-python.black-formatter",
        "ms-toolsai.jupyter",
        "bradlc.vscode-tailwindcss",
        
        // Security & Analysis
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        "hashicorp.terraform",
        "github.vscode-github-actions",
        
        // Code Quality
        "esbenp.prettier-vscode",
        "streetsidesoftware.code-spell-checker",
        "yzhang.markdown-all-in-one",
        "davidanson.vscode-markdownlint",
        "ms-vscode.test-adapter-converter",
        
        // Performance & Debugging
        "vadimcn.vscode-lldb",
        "ms-vscode.cpptools-themes",
        "webfreak.debug",
        "formulahendry.code-runner",
        
        // AI & Productivity
        "github.copilot",
        "github.copilot-chat",
        "ms-vscode.live-server",
        "ritwickdey.liveserver",
        
        // Specialized Tools
        "ms-vscode.hexeditor",
        "ms-vscode.vscode-serial-monitor",
        "jnoortheen.nix-ide",
        "tamasfe.even-better-toml"
      ],
      
      "settings": {
        // Rust Configuration
        "rust-analyzer.cargo.features": "all",
        "rust-analyzer.check.command": "clippy",
        "rust-analyzer.check.extraArgs": ["--all-targets"],
        "rust-analyzer.completion.autoimport.enable": true,
        "rust-analyzer.hover.actions.implementations.enable": true,
        "rust-analyzer.lens.implementations.enable": true,
        
        // Python Configuration
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.banditEnabled": true,
        "python.linting.mypyEnabled": true,
        "python.formatting.provider": "black",
        "python.testing.pytestEnabled": true,
        
        // C/C++ Configuration
        "C_Cpp.default.compilerPath": "/usr/bin/clang",
        "C_Cpp.default.cStandard": "c17",
        "C_Cpp.default.cppStandard": "c++20",
        "C_Cpp.default.intelliSenseMode": "linux-clang-x64",
        "C_Cpp.clang_format_style": "LLVM",
        
        // Go Configuration
        "go.toolsManagement.autoUpdate": true,
        "go.lintTool": "staticcheck",
        "go.formatTool": "goimports",
        "go.useLanguageServer": true,
        
        // Security Settings
        "files.associations": {
          "*.seccomp": "json",
          "*.apparmor": "plaintext",
          "Dockerfile*": "dockerfile"
        },
        
        // Editor Settings
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll": true,
          "source.organizeImports": true
        },
        "editor.rulers": [80, 100],
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        
        // Terminal Settings
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash",
            "args": ["-l"]
          },
          "zsh": {
            "path": "/usr/bin/zsh"
          }
        },
        
        // Git Settings
        "git.autofetch": true,
        "git.enableSmartCommit": true,
        "git.confirmSync": false,
        
        // Docker Settings
        "docker.languageserver.diagnostics.deprecatedMaintainer": "error",
        "docker.languageserver.diagnostics.instructionCasing": "error",
        
        // File Watcher
        "files.watcherExclude": {
          "**/target/**": true,
          "**/node_modules/**": true,
          "**/.git/**": true,
          "**/build/**": true
        }
      }
    }
  },

  "forwardPorts": [
    3000,   // Frontend dev server
    8000,   // API server
    8080,   // Web dashboard
    8200,   // Vault
    4222,   // NATS
    6379,   // Redis
    5432,   // PostgreSQL
    9090,   // Prometheus
    3030    // Grafana
  ],

  "portsAttributes": {
    "3000": {
      "label": "Frontend Dev Server",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "API Server",
      "onAutoForward": "notify"
    },
    "8080": {
      "label": "Web Dashboard",
      "onAutoForward": "openPreview"
    }
  },

  "postCreateCommand": "/workspace/.devcontainer/scripts/post-create.sh",
  "postStartCommand": "/workspace/.devcontainer/scripts/post-start.sh",

  "remoteEnv": {
    "RUST_BACKTRACE": "1",
    "CARGO_TERM_COLOR": "always",
    "PYTHONPATH": "/workspace/src",
    "GO111MODULE": "on",
    "CGO_ENABLED": "1",
    "PATH": "/workspace/.local/bin:${containerEnv:PATH}",
    "SYNAPTICOS_ENV": "development",
    "VAULT_ADDR": "http://localhost:8200",
    "VAULT_TOKEN": "dev-token",
    "NATS_URL": "nats://localhost:4222"
  },

  "mounts": [
    "source=syn-os-cargo-cache,target=/usr/local/cargo/registry,type=volume",
    "source=syn-os-go-cache,target=/go/pkg,type=volume",
    "source=syn-os-node-modules,target=/workspace/node_modules,type=volume"
  ],

  "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
}
