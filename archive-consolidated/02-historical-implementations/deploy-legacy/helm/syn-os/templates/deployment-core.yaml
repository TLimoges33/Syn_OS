apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "syn-os.fullname" . }}-core
  namespace: {{ .Values.namespace | default "syn-os" }}
  labels:
    {{- include "syn-os.labels" . | nindent 4 }}
    component: core
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount.core | default 3 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "syn-os.selectorLabels" . | nindent 6 }}
      component: core
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "syn-os.selectorLabels" . | nindent 8 }}
        component: core
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "syn-os.serviceAccountName" . }}
      securityContext:
        {{- include "syn-os.securityContext" . | nindent 8 }}
      containers:
        - name: core
          securityContext:
            {{- include "syn-os.containerSecurityContext" . | nindent 12 }}
          image: "{{ .Values.image.core.repository }}:{{ .Values.image.core.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.core.port | default 8080 }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.service.core.metricsPort | default 9090 }}
              protocol: TCP
          env:
            - name: SYN_OS_ENVIRONMENT
              value: {{ .Values.environment | default "kubernetes" | quote }}
            - name: SYN_OS_LOG_LEVEL
              value: {{ .Values.core.logLevel | default "info" | quote }}
            - name: SYN_OS_SECURITY_ENABLED
              value: {{ .Values.security.enabled | default true | quote }}
            - name: SYN_OS_CONSCIOUSNESS_ENABLED
              value: {{ .Values.consciousness.enabled | default true | quote }}
            {{- with .Values.core.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: {{ .Values.core.livenessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.core.livenessProbe.periodSeconds | default 10 }}
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: {{ .Values.core.readinessProbe.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.core.readinessProbe.periodSeconds | default 5 }}
          resources:
            {{- if .Values.core.resources }}
            {{- toYaml .Values.core.resources | nindent 12 }}
            {{- else }}
            {{- include "syn-os.resources" . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/syn-os
              readOnly: true
            - name: data
              mountPath: /var/lib/syn-os
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: config
          configMap:
            name: {{ include "syn-os.fullname" . }}-config
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "syn-os.fullname" . }}-core-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
