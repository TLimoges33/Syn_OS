apiVersion: apps/v1
kind: Deployment
metadata:
  labels: '{{- include "synapticos.labels" . | nindent 4 }}'
  name: '{{ include "synapticos.fullname" . }}-orchestrator'
spec:
  replicas: '{{ .Values.replicaCount.orchestrator }}'
  selector:
    matchLabels:
      app.kubernetes.io/component: orchestrator
      app.kubernetes.io/instance: '{{ .Release.Name }}'
      app.kubernetes.io/name: '{{ include "synapticos.name" . }}'
  template:
    metadata:
      labels:
        app.kubernetes.io/component: orchestrator
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app.kubernetes.io/name: '{{ include "synapticos.name" . }}'
    spec:
      containers:
      - env:
        - name: NATS_URL
          value: nats://{{ include "synapticos.fullname" . }}-nats:4222
        - name: POSTGRES_HOST
          value: '{{ include "synapticos.fullname" . }}-postgresql'
        - name: REDIS_HOST
          value: '{{ include "synapticos.fullname" . }}-redis-master'
        image: '{{ .Values.image.registry }}/{{ .Values.image.repository }}/orchestrator:{{
          .Values.image.tag }}'
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        name: orchestrator
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: '{{ toYaml .Values.resources.orchestrator | nindent 12 }}'
