apiVersion: v1
kind: Namespace
metadata:
  name: synos-phase4
  labels:
    name: synos-phase4
    version: "1.0"
    phase: "phase4-deployment-infrastructure"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: threat-intelligence-dashboard
  namespace: synos-phase4
  labels:
    app: threat-intelligence-dashboard
    component: phase4-dashboard
    version: "1.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: threat-intelligence-dashboard
  template:
    metadata:
      labels:
        app: threat-intelligence-dashboard
        component: phase4-dashboard
    spec:
      containers:
      - name: threat-intel-dashboard
        image: synos/threat-intelligence-dashboard:latest
        ports:
        - containerPort: 8084
          name: dashboard-port
        env:
        - name: NATS_URL
          value: "nats://nats-service:4222"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: THREAT_INTEL_DASHBOARD_PORT
          value: "8084"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: threat-intelligence-dashboard-service
  namespace: synos-phase4
  labels:
    app: threat-intelligence-dashboard
spec:
  selector:
    app: threat-intelligence-dashboard
  ports:
  - port: 8084
    targetPort: 8084
    name: dashboard
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phase4-integration-bridge
  namespace: synos-phase4
  labels:
    app: phase4-integration-bridge
    component: phase4-integration
    version: "1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phase4-integration-bridge
  template:
    metadata:
      labels:
        app: phase4-integration-bridge
        component: phase4-integration
    spec:
      serviceAccountName: synos-phase4-service-account
      containers:
      - name: integration-bridge
        image: synos/phase4-integration-bridge:latest
        ports:
        - containerPort: 8085
          name: bridge-port
        env:
        - name: NATS_URL
          value: "nats://nats-service:4222"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROMETHEUS_URL
          value: "http://prometheus-service:9090"
        - name: GRAFANA_URL
          value: "http://grafana-service:3000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8085
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8085
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: phase4-integration-bridge-service
  namespace: synos-phase4
  labels:
    app: phase4-integration-bridge
spec:
  selector:
    app: phase4-integration-bridge
  ports:
  - port: 8085
    targetPort: 8085
    name: bridge
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: synos-phase4-service-account
  namespace: synos-phase4

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: synos-phase4-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["monitoring.coreos.com"]
  resources: ["servicemonitors", "podmonitors"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies", "ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: synos-phase4-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: synos-phase4-cluster-role
subjects:
- kind: ServiceAccount
  name: synos-phase4-service-account
  namespace: synos-phase4

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: phase4-config
  namespace: synos-phase4
data:
  integration.yaml: |
    phase4:
      deployment_infrastructure:
        kubernetes:
          enabled: true
          namespace: synos-phase4
          monitoring_enabled: true
        helm:
          enabled: true
          charts_path: "/helm-charts"
        ingress:
          enabled: true
          ssl_termination: true
          rate_limiting: true
      monitoring_observability:
        prometheus:
          enabled: true
          retention_days: 30
          scrape_interval: "15s"
        grafana:
          enabled: true
          admin_password: "secure-password-change-me"
        distributed_tracing:
          enabled: true
          jaeger_endpoint: "http://jaeger-service:14268"
        log_aggregation:
          enabled: true
          elasticsearch_endpoint: "http://elasticsearch-service:9200"
        alerting:
          enabled: true
          slack_webhook: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
      threat_intelligence:
        global_orchestrator:
          enabled: true
          hybrid_mode: true
        realtime_aggregator:
          enabled: true
          sources_count: 50
        dashboard:
          enabled: true
          websocket_enabled: true
      consciousness_integration:
        security_controller:
          enabled: true
          consciousness_level_threshold: 0.8
        neural_darwinism:
          enabled: true
          population_size: 500
        kernel_hooks:
          enabled: true
          reserved_cpu_cores: 2

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phase4-ingress
  namespace: synos-phase4
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit-rpm: "1000"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - threat-intel.synos.local
    - integration-bridge.synos.local
    secretName: phase4-tls-secret
  rules:
  - host: threat-intel.synos.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: threat-intelligence-dashboard-service
            port:
              number: 8084
  - host: integration-bridge.synos.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: phase4-integration-bridge-service
            port:
              number: 8085

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: threat-intel-data
  namespace: synos-phase4
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: integration-bridge-data
  namespace: synos-phase4
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: ssd

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: phase4-services-monitor
  namespace: synos-phase4
  labels:
    app: phase4-monitoring
spec:
  selector:
    matchLabels:
      component: phase4-dashboard
  endpoints:
  - port: dashboard
    path: /metrics
    interval: 30s
  - port: bridge
    path: /metrics
    interval: 30s

---
apiVersion: v1
kind: Secret
metadata:
  name: phase4-secrets
  namespace: synos-phase4
type: Opaque
data:
  # Base64 encoded secrets
  jwt-secret: c3lub3MtcGhhc2U0LWp3dC1zZWNyZXQ=  # synos-phase4-jwt-secret
  redis-password: c3lub3MtcmVkaXMtcGFzcw==  # synos-redis-pass
  nats-token: c3lub3MtbmF0cy10b2tlbg==  # synos-nats-token

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: threat-intel-dashboard-pdb
  namespace: synos-phase4
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: threat-intelligence-dashboard

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: threat-intel-dashboard-hpa
  namespace: synos-phase4
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: threat-intelligence-dashboard
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: phase4-network-policy
  namespace: synos-phase4
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: synos-prod
    - namespaceSelector:
        matchLabels:
          name: synos-monitoring
    ports:
    - protocol: TCP
      port: 8084
    - protocol: TCP
      port: 8085
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: synos-prod
    ports:
    - protocol: TCP
      port: 4222  # NATS
    - protocol: TCP
      port: 6379  # Redis
  - to: []  # Allow external traffic for threat intelligence feeds
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80