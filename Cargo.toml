[workspace]
resolver = "2"
members = [
    "core/security",
    "core/ai",
    "core/common",
    "core/services",
    "core/infrastructure/package",
    # "src/kernel",  # Excluded: no_std kernel must be built separately with x86_64-unknown-none target
    "src/userspace/shell",
    "src/userspace/synpkg",
    "src/userspace/libtsynos",
#    "src/userspace/tests"  # Disabled - tests have linker conflicts,
    "src/graphics",
    "src/desktop",
    "src/ai-engine",
    "src/ai-runtime",
    "src/drivers/ai-accelerator",
    "src/tools/distro-builder",
    "src/tools/ai-model-manager",
    "src/analytics",
    "src/zero-trust-engine",
    "src/compliance-runner",
    "src/threat-intel",
    "src/deception-tech",
    "src/threat-hunting",
    "src/hsm-integration",
    "src/vuln-research",
    "src/vm-wargames",
    "src/userspace/libc",
    "src/tools/dev-utils",
    "src/gamification",  # V1.5: WoW/KOTOR/Cyberpunk-inspired skill tree system
    "src/cloud-security",  # V1.6: Multi-cloud security monitoring (AWS/Azure/GCP)
    "src/ai-tutor",  # V1.7: Adaptive AI tutoring with learning style detection
    "src/mobile-bridge",  # V1.8: WebSocket bridge for mobile app
    "src/universal-command",  # V1.9: Universal command orchestrator with AI tool selection
    "src/ctf-platform",  # V1.9: CTF training platform with challenges and leaderboards
]

# Exclude archived, backup, and build directories
exclude = [
    "archive/**",
    "archive-consolidated/**",
    "custom-os-development/**",
    "target/**",
    "linux-distribution/SynOS-Linux-Builder/build/**",
    "fuzz/**",  # Fuzzing has its own workspace
]

[workspace.package]
version = "4.5.0"
edition = "2021"
authors = ["Syn_OS Team"]
repository = "https://github.com/TLimoges33/Syn_OS"
license = "MIT"

[workspace.dependencies]
# ===================
# CORE KERNEL DEPENDENCIES
# ===================
bootloader = { version = "0.10.12", default-features = false }
volatile = "0.4.6"
spin = { version = "0.9.8", default-features = false, features = ["mutex", "rwlock", "once", "spin_mutex", "lazy"] }
x86_64 = { version = "0.14.10", default-features = false, features = ["abi_x86_interrupt"] }
pic8259 = { version = "0.10.4", default-features = false }
pc-keyboard = { version = "0.7.0", default-features = false }
linked_list_allocator = { version = "0.10.5", default-features = false, features = ["use_spin"] }
lazy_static = { version = "1.5", default-features = false, features = ["spin_no_std"] }
uart_16550 = { version = "0.2", default-features = false }

# ===================
# SERVICE INTEGRATION DEPENDENCIES
# ===================
async-nats = "0.33"
uuid = { version = "1.6", default-features = false, features = ["v4"] }

# ===================
# AI/CONSCIOUSNESS DEPENDENCIES
# ===================
candle-core = { version = "0.9.1" }
candle-nn = { version = "0.9.1" }
tokenizers = { version = "0.15.0" }
# ONNX Runtime for cross-platform model execution
ort = { version = "1.16.0" }
# PyTorch bindings for Rust
tch = { version = "0.13.0" }

# ===================
# IPC & MESSAGING
# ===================
zeromq = { version = "0.5.0-pre" }
nng = { version = "1.0.0" }

# ===================
# LINUX DISTRIBUTION DEPENDENCIES
# ===================
systemd = { version = "0.10.0" }
dbus = { version = "0.9.0" }
nix = { version = "0.27.0" }
libc = { version = "0.2.0" }

# ===================
# SERIALIZATION & DATA
# ===================
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }

# ===================
# ERROR HANDLING & LOGGING
# ===================
anyhow = { version = "1.0.75", default-features = false }
thiserror = { version = "1.0.50", default-features = false }
chrono = { version = "0.4", default-features = false, features = ["serde"] }
log = { version = "0.4", default-features = false }
tracing = { version = "0.1", default-features = false }

# ===================
# ASYNC RUNTIME
# ===================
tokio = { version = "1.32", default-features = false, features = ["rt", "macros"] }
futures = { version = "0.3", default-features = false }

# ===================
# CRYPTOGRAPHY
# ===================
ring = "0.17"
aes-gcm = { version = "0.10", default-features = false, features = ["alloc"] }
chacha20poly1305 = "0.10"
ed25519-dalek = "2.0"
x25519-dalek = "2.0"
sha2 = "0.10"
hmac = "0.12"
base64 = "0.22"
getrandom = { version = "0.2", default-features = false }

# ===================
# HTTP CLIENT (SIEM Integration)
# ===================
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls"] }
hyper = { version = "1.0", features = ["client", "http1", "http2"] }
http = "1.0"

# ===================
# DEVELOPMENT TOOLS
# ===================
clap = { version = "4.4", features = ["derive"] }

# ===================
# TESTING FRAMEWORK
# ===================
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"

# ===================
# WORKSPACE FEATURES
# ===================
[workspace.metadata.features]
# AI Features (from core/ai)
consciousness = ["syn-ai/consciousness"]
ai-bridge = ["syn-ai/ai-bridge", "syn-security/cybersec-tools"]
educational = ["syn-ai/educational"]

# Security Features (from core/security)
security-enhanced = ["syn-security/security-enhanced"]
cybersec-tools = ["syn-security/cybersec-tools"]
mssp-platform = ["syn-security/mssp-platform"]
red-team-tools = ["syn-security/red-team-tools"]
blue-team-defense = ["syn-security/blue-team-defense"]

# ===================
# OPTIMIZATION PROFILES
# ===================
[profile.release]
# Production kernel optimization - Maximum performance
opt-level = 3           # Maximum optimization
lto = "fat"            # Link-time optimization across all dependencies
codegen-units = 1      # Single codegen unit for maximum optimization
panic = "abort"        # Abort on panic (smaller binary, faster)
strip = true           # Strip debug symbols from binary
overflow-checks = false # Disable overflow checks in release (kernel handles this)
incremental = false    # Disable incremental compilation for better optimization
rpath = false          # Disable runtime path resolution (security)
debug-assertions = false  # Disable debug assertions in release

[profile.release-small]
# Size-optimized build for embedded systems
inherits = "release"
opt-level = "z"        # Optimize for size
lto = "fat"
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
# Fast compilation for development
opt-level = 0
debug = true
panic = "abort"  # Changed to abort for kernel compatibility
overflow-checks = true

[profile.dev-fast]
# Development with some optimizations
inherits = "dev"
opt-level = 1          # Basic optimization for faster execution
debug = 1              # Reduced debug info for faster builds
